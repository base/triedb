name: PR

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        profile: [dev, release]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Build
      run: cargo build --verbose --profile=${{ matrix.profile }}

  format:
    runs-on: ubuntu-latest

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: dtolnay/rust-toolchain@b95584d8105b9ab200e15821fa671848cf2b7017 # nightly
      with:
        components: rustfmt
    - name: Format
      run: |
        cargo +nightly fmt --all -- --check
        if [ $? -ne 0 ]; then
          echo "::error::Formatting check failed. Please run 'make format' locally and commit the changes."
          cargo +nightly fmt --all -- --check
          exit 1
        fi

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Lint
      run: cargo clippy --all-targets -- --deny=warnings

  unit-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        profile: [dev, release]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Run unit tests
      run: |
        make unit-tests cargo_flags='--verbose --profile=${{ matrix.profile }}'

  integration-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        profile: [dev, release]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Run integration tests
      run:
        make integration-tests cargo_flags=--profile=${{ matrix.profile }} test_flags=--nocapture
